cmake_minimum_required(VERSION 3.25)

# üéØ Define o projeto ap√≥s garantir que o toolchain foi baixado
project(Firmware C CXX ASM)


# üìå C++20 com suporte a m√≥dulos
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# üìÅ Diret√≥rios do projeto
set(SRC_DIR     "${CMAKE_SOURCE_DIR}/src")
set(STARTUP_DIR "${CMAKE_SOURCE_DIR}/startup")
set(INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include")
set(LIBS_DIR    "${CMAKE_SOURCE_DIR}/libs")
set(BIN_DIR     "${CMAKE_SOURCE_DIR}/bin")

# Cria pasta de sa√≠da bin√°ria
file(MAKE_DIRECTORY ${BIN_DIR})

# Incluir headers
include_directories(${INCLUDE_DIR})

# üîé Coleta fontes da aplica√ß√£o
file(GLOB_RECURSE APP_SOURCES
    "${SRC_DIR}/*.cpp" "${SRC_DIR}/*.c" "${SRC_DIR}/*.cxx"
    "${SRC_DIR}/*.cppm" "${SRC_DIR}/*.cxxm"
)

# üîé Coleta fontes de startup
file(GLOB STARTUP_SOURCES
    "${STARTUP_DIR}/*.c" "${STARTUP_DIR}/*.s" "${STARTUP_DIR}/*.S"
)

# üîÅ Adiciona bibliotecas de libs/
file(GLOB CHILD_LIB_DIRS RELATIVE ${LIBS_DIR} ${LIBS_DIR}/*)
foreach(lib ${CHILD_LIB_DIRS})
    if(IS_DIRECTORY "${LIBS_DIR}/${lib}")
        add_subdirectory(${LIBS_DIR}/${lib})
    endif()
endforeach()

# üõ†Ô∏è Cria execut√°vel final
add_executable(firmware.elf
    ${APP_SOURCES}
    ${STARTUP_SOURCES}
)

# üìé Include para headers da aplica√ß√£o
target_include_directories(firmware.elf PRIVATE ${INCLUDE_DIR})

# üîó Link com bibliotecas (alvo: mesmo nome do diret√≥rio)
foreach(lib ${CHILD_LIB_DIRS})
    target_link_libraries(firmware.elf PRIVATE ${lib})
endforeach()

# ‚öôÔ∏è Flags t√≠picas para compila√ß√£o bare-metal
target_compile_options(firmware.elf PRIVATE
    -Wall -Wextra -Werror
    -ffreestanding -nostdlib
)

# üß© Op√ß√µes de link
target_link_options(firmware.elf PRIVATE
    -T${STARTUP_DIR}/linker.ld
    -nostdlib -Wl,--gc-sections -Wl,-Map=${BIN_DIR}/firmware.map
)

# üîÑ Gera firmware.bin e firmware.hex ap√≥s build
add_custom_command(TARGET firmware.elf POST_BUILD
    COMMAND ${CMAKE_OBJCOPY} -O binary firmware.elf ${BIN_DIR}/firmware.bin
    COMMAND ${CMAKE_OBJCOPY} -O ihex   firmware.elf ${BIN_DIR}/firmware.hex
    COMMENT "Gerando firmware.bin e firmware.hex"
)
